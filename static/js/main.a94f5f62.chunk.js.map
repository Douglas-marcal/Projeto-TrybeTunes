{"version":3,"sources":["services/userAPI.js","components/Loading.jsx","components/Header.jsx","services/favoriteSongsAPI.js","components/MusicCard.jsx","components/NavBar.jsx","services/musicsAPI.js","pages/Album.jsx","pages/Favorites.jsx","pages/Login.jsx","pages/NotFound.jsx","pages/Profile.jsx","pages/ProfileEdit.jsx","services/searchAlbumsAPI.js","pages/Search.jsx","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","Loading","this","props","isHeader","className","Component","defaultProps","Header","state","isLoading","getUserName","bind","setState","then","name","to","style","isActive","color","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","MusicCard","songData","addFavoriteSong","removeFavoriteSong","getFavoriteSong","song","target","checked","id","objectSong","playlist","find","trackId","prevState","filter","s","checkForUpdate","trackName","map","previewUrl","artworkUrl100","collectionName","src","alt","controls","kind","htmlFor","type","onChange","event","some","undefined","NavBar","activeClassName","getMusics","a","fetch","request","json","requestJson","results","Album","musics","requestMusic","match","params","artistName","firstArtist","Favorites","length","Login","isInvalidName","redirect","onClickButtonLogin","verifyName","email","image","description","value","onSubmit","placeholder","disabled","NotFound","Profile","userInfo","ProfileEdit","isDisabled","updateInfos","checkButton","saveChanges","includes","updatedUser","cols","rows","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionId","collectionPrice","releaseDate","trackCount","Search","artists","buttonDisabled","responseAPI","textFieldLetters","validateInput","requestAPI","searchAlbums","data","albums","App","basename","process","exact","path","component","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a94f5f62.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport { bool } from 'prop-types';\nimport '../styles/Loading.css';\n\nclass Loading extends Component {\n  render() {\n    const { isHeader } = this.props;\n    return (\n      isHeader\n        ? (\n          <h4 className=\"loading\">\n            <span className=\"separator\">|</span>\n            Carregando...\n          </h4>\n        ) : (\n          <h1 className=\"loading-content\">Carregando...</h1>\n        )\n    );\n  }\n}\n\nLoading.propTypes = {\n  isHeader: bool,\n};\n\nLoading.defaultProps = {\n  isHeader: false,\n};\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\nimport '../styles/Header.css';\n\nclass Header extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: false,\n    };\n\n    this.getUserName = this.getUserName.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUserName();\n  }\n\n  getUserName() {\n    this.setState({ isLoading: true }, () => {\n      getUser().then(({ name }) => {\n        this.setState(() => ({ name, isLoading: false }));\n      });\n    });\n  }\n\n  render() {\n    const { name, isLoading } = this.state;\n    return (\n      <header className=\"header-container\">\n        <h2>Só Sucesso ⚡</h2>\n        <div className=\"nav-bar\">\n          {\n            isLoading\n              ? <Loading isHeader />\n              : (\n                <h4\n                  className=\"user-name\"\n                >\n                  <span className=\"separator\">|</span>\n                  {name}\n                </h4>\n              )\n          }\n          <ul className=\"menu-container\">\n            <NavLink\n              to=\"/search\"\n              style={ (isActive) => ({\n                color: isActive ? 'yellow' : 'white',\n              }) }\n            >\n              <li>Pesquisa</li>\n            </NavLink>\n            <NavLink\n              to=\"/favorites\"\n              style={ (isActive) => ({\n                color: isActive ? 'yellow' : 'white',\n              }) }\n            >\n              <li>Favoritos</li>\n            </NavLink>\n            <NavLink\n              to=\"/profile\"\n              style={ (isActive) => ({\n                color: isActive ? 'yellow' : 'white',\n              }) }\n            >\n              <li>Perfil</li>\n            </NavLink>\n          </ul>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nclass MusicCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      songData: [],\n    };\n\n    this.addFavoriteSong = this.addFavoriteSong.bind(this);\n    this.removeFavoriteSong = this.removeFavoriteSong.bind(this);\n    this.getFavoriteSong = this.getFavoriteSong.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFavoriteSong();\n  }\n\n  getFavoriteSong() {\n    getFavoriteSongs().then((songData) => {\n      this.setState(() => ({ songData, isLoading: false }));\n    });\n  }\n\n  addFavoriteSong({ target: { checked, id } }) {\n    if (checked) {\n      this.setState({ isLoading: true });\n      const { playlist } = this.props;\n      const objectSong = playlist.find(({ trackId }) => +trackId === +id);\n      addSong(objectSong).then(() => {\n        this.setState((prevState) => ({\n          isLoading: false,\n          songData: [...prevState.songData, objectSong],\n        }\n        ));\n      });\n    }\n  }\n\n  removeFavoriteSong({ target: { checked, id } }) {\n    if (!checked) {\n      this.setState({ isLoading: true });\n      const { playlist } = this.props;\n      const objectSong = playlist.find(({ trackId }) => +id === +trackId);\n      removeSong(objectSong).then(() => {\n        this.getFavoriteSong();\n      });\n    }\n  }\n\n  render() {\n    const { playlist, checkForUpdate } = this.props;\n    const { isLoading, songData } = this.state;\n    return (\n      <div>\n        {\n          isLoading ? <Loading /> : (\n            <div className=\"music-card-container\">\n              {\n                playlist\n                  .filter(({ trackName }) => trackName)\n                  .map(({\n                    trackName,\n                    previewUrl,\n                    trackId,\n                    artworkUrl100,\n                    collectionName,\n                  }) => (\n                    <div className=\"music-card\" key={ trackId }>\n                      <p>{trackName}</p>\n                      <img src={ artworkUrl100 } alt={ collectionName } />\n                      <audio src={ previewUrl } controls>\n                        <track kind=\"captions\" />\n                        O seu navegador não suporta o elemento\n                        {' '}\n                        <code>audio</code>\n                        .\n                      </audio>\n                      <label htmlFor={ trackId }>\n                        Favorita\n                        <input\n                          type=\"checkbox\"\n                          className=\"favorite-checkbox\"\n                          id={ trackId }\n                          onChange={ (event) => {\n                            this.addFavoriteSong(event);\n                            this.removeFavoriteSong(event);\n                            if (checkForUpdate) {\n                              checkForUpdate();\n                            }\n                          } }\n                          checked={\n                            songData\n                              .some(({ trackId: songID }) => songID === trackId)\n                          }\n                        />\n                      </label>\n                    </div>\n                  ))\n              }\n            </div>\n          )\n        }\n\n      </div>\n\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  playlist: PropTypes.arrayOf(PropTypes.object).isRequired,\n  checkForUpdate: PropTypes.func,\n};\n\nMusicCard.defaultProps = {\n  checkForUpdate: undefined,\n};\n\nexport default MusicCard;\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <ul className=\"menu-container-mobile\">\n        <NavLink to=\"/search\" activeClassName=\"selected\" className=\"link\">\n          <li>Pesquisa</li>\n        </NavLink>\n        <NavLink to=\"/favorites\" activeClassName=\"selected\" className=\"link\">\n          <li>Favoritos</li>\n        </NavLink>\n        <NavLink to=\"/profile\" activeClassName=\"selected\" className=\"link\">\n          <li>Perfil</li>\n        </NavLink>\n      </ul>\n    );\n  }\n}\n\nexport default NavBar;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Header, MusicCard, NavBar } from '../components';\nimport getMusics from '../services/musicsAPI';\nimport '../styles/Album.css';\n\nclass Album extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      musics: [],\n    };\n\n    this.requestMusic = this.requestMusic.bind(this);\n  }\n\n  componentDidMount() {\n    this.requestMusic();\n  }\n\n  requestMusic() {\n    const { match: { params: { id } } } = this.props;\n    getMusics(id).then((musics) => {\n      this.setState(() => ({ musics }));\n    });\n  }\n\n  render() {\n    const { musics } = this.state;\n    const [firstArtist] = musics;\n    let artistName;\n    let collectionName;\n    if (firstArtist) {\n      artistName = firstArtist.artistName;\n      collectionName = firstArtist.collectionName;\n    }\n    return (\n      <div className=\"page-album\">\n        <Header />\n        <NavBar />\n        <h2>{artistName}</h2>\n        <h3>{collectionName}</h3>\n        <MusicCard playlist={ musics } />\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n","import React, { Component } from 'react';\nimport { Header, Loading, MusicCard, NavBar } from '../components';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\nimport '../styles/Favorites.css';\n\nclass Favorites extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      favoriteSongs: [],\n    };\n\n    this.getFavoriteSong = this.getFavoriteSong.bind(this);\n    this.checkForUpdate = this.checkForUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFavoriteSong();\n  }\n\n  getFavoriteSong() {\n    getFavoriteSongs().then((favoriteSongs) => {\n      this.setState({\n        favoriteSongs,\n        isLoading: false,\n      });\n    });\n  }\n\n  checkForUpdate() {\n    this.getFavoriteSong();\n  }\n\n  render() {\n    const { isLoading, favoriteSongs } = this.state;\n    return (\n      <div className=\"page-favorites\">\n        <Header />\n        <NavBar />\n\n        {\n          favoriteSongs.length\n            ? <h2>Músicas Favoritas</h2>\n            : <h2>Não há músicas favoritas</h2>\n        }\n\n        {\n          isLoading\n            ? <Loading />\n            : (\n              <div>\n                <MusicCard\n                  playlist={ favoriteSongs }\n                  checkForUpdate={ this.checkForUpdate }\n                />\n              </div>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createUser } from '../services/userAPI';\nimport { Loading } from '../components';\nimport '../styles/Login.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      isInvalidName: true,\n      isLoading: false,\n      redirect: false,\n    };\n\n    this.onClickButtonLogin = this.onClickButtonLogin.bind(this);\n    this.verifyName = this.verifyName.bind(this);\n  }\n\n  onClickButtonLogin() {\n    const { name } = this.state;\n    this.setState(() => ({\n      isLoading: true,\n    }), () => createUser({ name }).then(() => {\n      this.setState(() => ({\n        redirect: true,\n      }));\n    }));\n  }\n\n  verifyName({ target: { value } }) {\n    this.setState(() => ({\n      name: value,\n    }), () => this.setState((prevState) => {\n      const MIN_CHARACTERS = 3;\n      if (prevState.name.length >= MIN_CHARACTERS) {\n        return { isInvalidName: false };\n      }\n      return { isInvalidName: true };\n    }));\n  }\n\n  render() {\n    const { isInvalidName, isLoading, redirect } = this.state;\n    if (redirect) return (<Redirect to=\"/search\" />);\n    return (\n      isLoading ? <Loading /> : (\n        <div className=\"container-login\">\n\n          <div>\n\n            <h1>Aqui só toca SUCESSO!</h1>\n\n            <form className=\"form-container\" onSubmit={ this.onClickButtonLogin }>\n              <input\n                type=\"text\"\n                id=\"name-input\"\n                className=\"name-input\"\n                placeholder=\"Nome\"\n                onChange={ this.verifyName }\n              />\n\n              <button\n                type=\"submit\"\n                className=\"submit-button\"\n                disabled={ isInvalidName }\n              >\n                Entrar\n              </button>\n\n            </form>\n\n          </div>\n\n        </div>\n      )\n\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div />\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Header, Loading, NavBar } from '../components';\nimport { getUser } from '../services/userAPI';\nimport '../styles/Profile.css';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      isLoading: true,\n      userInfo: {},\n    };\n  }\n\n  componentDidMount() {\n    getUser().then((userInfo) => {\n      this.setState({ userInfo, isLoading: false });\n    });\n  }\n\n  render() {\n    const { userInfo, isLoading } = this.state;\n    return (\n      <div className=\"container-page-profile\">\n        <Header />\n        <NavBar />\n\n        {\n          isLoading ? <Loading /> : (\n            <div className=\"page-profile\">\n              <div className=\"image-button-container\">\n                {\n                  userInfo.image\n                    ? (\n                      <img\n                        src={ userInfo.image }\n                        alt={ `Foto de ${userInfo.name}` }\n                        className=\"profile-image\"\n                      />\n                    )\n                    : (\n                      <img\n                        src=\"https://cdn.pixabay.com/photo/2016/03/31/14/47/avatar-1292817_1280.png\"\n                        alt={ `Foto de ${userInfo.name}` }\n                        className=\"profile-image\"\n                      />\n                    )\n                }\n\n                <Link to=\"/profile/edit\">\n                  <button\n                    type=\"button\"\n                    className=\"button-edit-profile\"\n                  >\n                    Editar perfil\n                  </button>\n\n                </Link>\n              </div>\n              <p>\n                <span>Nome: </span>\n                {userInfo.name}\n              </p>\n              <p>\n                <span>E-mail: </span>\n                {userInfo.email}\n              </p>\n              <p>\n                <span>Descrição: </span>\n                {userInfo.description}\n              </p>\n            </div>\n\n          )\n        }\n\n      </div>\n\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Header, Loading, NavBar } from '../components';\nimport { getUser, updateUser } from '../services/userAPI';\nimport '../styles/ProfileEdit.css';\n\nclass ProfileEdit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true,\n      isDisabled: true,\n    };\n\n    this.updateInfos = this.updateInfos.bind(this);\n    this.checkButton = this.checkButton.bind(this);\n    this.saveChanges = this.saveChanges.bind(this);\n  }\n\n  componentDidMount() {\n    getUser().then((userInfo) => {\n      const { name, email, image, description } = userInfo;\n      this.setState({ name, email, image, description, isLoading: false }, () => {\n        this.checkButton();\n      });\n    });\n  }\n\n  checkButton() {\n    const { name, email, image, description } = this.state;\n    if (\n      name.length > 0\n      && (email.length > 0 && email.includes('@'))\n      && image.length > 0\n      && description.length > 0\n    ) {\n      this.setState({ isDisabled: false });\n    } else this.setState({ isDisabled: true });\n  }\n\n  saveChanges() {\n    const { name, email, image, description } = this.state;\n    this.setState({ isLoading: true }, () => {\n      updateUser({ name, email, image, description }).then(() => {\n        this.setState({ redirect: true });\n      });\n    });\n  }\n\n  updateInfos({ target: { value, name } }) {\n    this.setState(() => ({ [name]: value }), () => this.checkButton());\n  }\n\n  render() {\n    const {\n      isLoading,\n      name,\n      email,\n      description,\n      image,\n      isDisabled,\n      redirect,\n    } = this.state;\n\n    if (redirect) return (<Redirect to=\"/profile\" />);\n\n    return (\n      <div className=\"page-profile-edit\">\n        <Header />\n        <NavBar />\n\n        {\n          isLoading ? <Loading /> : (\n            <div className=\"profile-edit\">\n              <form className=\"form-edit-container\" onSubmit={ this.saveChanges }>\n\n                <div className=\"image-url-container\">\n                  <img\n                    src={ image }\n                    alt={ `Foto de ${name}` }\n                    className=\"profile-image\"\n                  />\n                  <label htmlFor=\"image\" className=\"label-image\">\n                    URL da imagem:\n                    <input\n                      type=\"text\"\n                      name=\"image\"\n                      value={ image }\n                      onChange={ this.updateInfos }\n                      placeholder=\"Insira a URL da imagem\"\n                      className=\"input-image\"\n                    />\n                  </label>\n                </div>\n\n                <label htmlFor=\"name\">\n                  Nome:\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    value={ name }\n                    onChange={ this.updateInfos }\n                    placeholder=\"Nome\"\n                    className=\"input-100\"\n                  />\n                </label>\n                <br />\n\n                <label htmlFor=\"email\">\n                  Email:\n                  <input\n                    type=\"text\"\n                    name=\"email\"\n                    value={ email }\n                    onChange={ this.updateInfos }\n                    placeholder=\"E-mail\"\n                    className=\"input-100\"\n                  />\n                </label>\n                <br />\n\n                <label htmlFor=\"description\">\n                  Descrição:\n                  <textarea\n                    placeholder=\"Descrição\"\n                    value={ description }\n                    onChange={ this.updateInfos }\n                    name=\"description\"\n                    id=\"description\"\n                    cols=\"20\"\n                    rows=\"5\"\n                    className=\"input-100 description\"\n                  />\n\n                </label>\n                <br />\n\n                <button\n                  type=\"submit\"\n                  disabled={ isDisabled }\n                  className=\"button-save-profile\"\n                >\n                  Salvar Alterações\n                </button>\n\n              </form>\n\n            </div>\n          )\n        }\n\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Header, Loading, NavBar } from '../components';\nimport searchAlbums from '../services/searchAlbumsAPI';\nimport '../styles/Search.css';\n\nclass Search extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      artists: '',\n      buttonDisabled: true,\n      isLoading: false,\n      responseAPI: false,\n      textFieldLetters: '',\n    };\n\n    this.validateInput = this.validateInput.bind(this);\n    this.requestAPI = this.requestAPI.bind(this);\n  }\n\n  requestAPI() {\n    this.setState(({ textFieldLetters }) => ({\n      isLoading: true,\n      artists: textFieldLetters,\n      buttonDisabled: textFieldLetters.length < 2,\n      textFieldLetters: '',\n    }), () => {\n      const { artists } = this.state;\n      searchAlbums(artists).then((data) => {\n        this.setState(() => ({\n          isLoading: false,\n          responseAPI: true,\n          albums: data,\n        }));\n      });\n    });\n  }\n\n  validateInput({ target: { value } }) {\n    this.setState(() => ({\n      textFieldLetters: value,\n    }), () => this.setState(({ textFieldLetters }) => ({\n      buttonDisabled: textFieldLetters.length < 2,\n    })));\n  }\n\n  render() {\n    const {\n      albums,\n      artists,\n      buttonDisabled,\n      isLoading,\n      responseAPI,\n      textFieldLetters,\n    } = this.state;\n    return (\n      <div className=\"page-search\">\n        <Header />\n        <NavBar />\n\n        {\n          isLoading\n            ? <Loading />\n            : (\n              <form className=\"search-container\" onSubmit={ this.requestAPI }>\n                <input\n                  type=\"text\"\n                  className=\"input-artist\"\n                  placeholder=\"Nome do artista ou banda\"\n                  value={ textFieldLetters }\n                  onChange={ this.validateInput }\n                />\n                <button\n                  type=\"submit\"\n                  className=\"button-search\"\n                  disabled={ buttonDisabled }\n                >\n                  Pesquisar\n                </button>\n              </form>\n            )\n        }\n\n        {\n          (responseAPI && albums.length) && (\n            <div className=\"results-container\">\n              <h3 className=\"result-title\">{`Resultado de álbuns de: ${artists}`}</h3>\n              <div className=\"albums-container\">\n                {\n                  albums.map(({\n                    collectionId,\n                    artistName,\n                    collectionName,\n                    artworkUrl100,\n                  }) => (\n                    <Link\n                      className=\"album\"\n                      to={ `/album/${collectionId}` }\n                      key={ collectionId }\n                    >\n                      <div className=\"album-container\">\n                        <h3>{artistName}</h3>\n                        <h5>{collectionName}</h5>\n                        <img src={ artworkUrl100 } alt={ collectionName } />\n                      </div>\n                    </Link>\n                  ))\n                }\n              </div>\n            </div>\n          )\n        }\n\n        {\n          (responseAPI && !albums.length) && <h1>Nenhum álbum foi encontrado</h1>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Album, Favorites, Login, NotFound, Profile, ProfileEdit, Search } from './pages';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={ Login } />\n          <Route path=\"/search\" component={ Search } />\n          <Route path=\"/album/:id\" component={ Album } />\n          <Route path=\"/favorites\" component={ Favorites } />\n          <Route path=\"/profile/edit\" component={ ProfileEdit } />\n          <Route path=\"/profile\" component={ Profile } />\n          <Route path=\"*\" component={ NotFound } />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}